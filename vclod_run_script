#! /bin/ksh
# Executes a VCLOD script (Variable Config, Locking, Operation, and Destination) with all
# the setup that entails. See the README for an overview of VCLODs.
#
# Usage:
# ./vclod_run_script /path/to/script

# Argument validation -- Continued later
[ -z "$VCLOD_BASE_DIR" ] && . "$(dirname $(readlink -f $(which $0)))/vclod_loadenv"
: ${VCLOD_BASE_DIR:?} ${VCLOD_FORCE_SETUP_SQL:=0} ${1:?The full path of a file to process is a required positional argument}
[ -s "$1" ] || { echo >&2 The positional argument must be a non-empty file; exit 1; }

# respect local config file
[ -f "`dirname $1`/config" ] && . "`dirname $1`/config"

. "${VCLOD_BASE_DIR%/}/vclod_get_semaphore"
. "${VCLOD_BASE_DIR%/}/vclod_stdio2log"

# Connection parameters are required, but can be set either in the env or the current directory's config file
: ${DEBUG_SHOULD_TIME_IT:=0}
if [[ $1 =~ .*\.sql(\..*)? || $VCLOD_FORCE_SETUP_SQL != 0 ]]; then
  : ${VCLOD_MYSQL_HOST:?} ${VCLOD_MYSQL_USER:?} ${VCLOD_MYSQL_PASSWORD:?} ${VCLOD_MYSQL_DB:?}
  case "${VCLOD_ENGINE:=mysql}" in
    mysql) export SRC="mysql -h$VCLOD_MYSQL_HOST -u$VCLOD_MYSQL_USER -p$VCLOD_MYSQL_PASSWORD -BNrc $VCLOD_MYSQL_DB" ;;
    # IMPROVE: add a postgres ENGINE
    *) echo >&2 "Unknown engine type $VCLOD_ENGINE" ; exit 1 ;;
  esac
fi
if [[ $1 =~ .*\.dst(\..*)? || $VCLOD_FORCE_SETUP_SQL != 0 ]]; then
  : ${VCLOD_DST_HOST:=${VCLOD_MYSQL_HOST:?}} ${VCLOD_DST_USER:=${VCLOD_MYSQL_USER:?}} ${VCLOD_DST_PASSWORD:=${VCLOD_MYSQL_PASSWORD:?}} ${VCLOD_DST_DB:=${VCLOD_MYSQL_DB:?}}
  case "${VCLOD_DST_ENGINE:=mysql}" in
    mysql) export DST="mysql -h$VCLOD_DST_HOST -u$VCLOD_DST_USER -p$VCLOD_DST_PASSWORD -BNrc $VCLOD_DST_DB" ;;
    # IMPROVE: add a postgres ENGINE
    *) echo >&2 "Unknown destination engine type $VCLOD_DST_ENGINE" ; exit 1 ;;
  esac
fi

INPUT_DIR="$(dirname $1)"

operation(){
  next="${1%.*}"
  [[ "$1" == "$next" ]] && cat && return # the cat connects stdin to stdout, note that the error case below does not.
  extension="${1##*.}"
  case "$extension" in
    #end points - last extension must be in this list or the root script will ignore it.
    sql) op=$SRC ;;
    dst) op=$DST ;;
    sh) op='. /dev/stdin' ;;

    # middle extensions, used to reformat date between end points
    batch) op="${VCLOD_BASE_DIR%/}/vclod_batcher" ;;
    awk-*) op="awk -f$INPUT_DIR/${extension#*-}" ;;

    # for testing, generally the last extension
    diff) op="diff -w $INPUT_DIR/${1%%.*} -" ;;
    err) op="eval cat >&2" ;;
    *) echo "Unknown file type $extension" >&2 ; exit 99 ;;
  esac
  $op | operation $next
}

ret=0
[ $DEBUG_SHOULD_TIME_IT == 1 ] && echo "[START] $@"
cat $1 | operation $(basename $1) || { ret=$?; echo >&2 "`basename $1` returned $ret"; }
[ $DEBUG_SHOULD_TIME_IT == 1 ] && echo "[FINISH] $@ returned $ret"
exit $ret
